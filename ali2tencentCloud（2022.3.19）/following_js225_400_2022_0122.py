


import datetime
import time

import pymysql
import requests
from lxml import etree
import json
from queue import Queue
import threading
from requests.exceptions import RequestException




from retrying import retry

def retry_if_io_error(exception):
    return isinstance(exception, ZeroDivisionError)







def run_forever(func):
    def wrapper(obj):
        while True:
            func(obj)
    return wrapper


def RemoveDot(item):
    f_l = []
    for it in item:

        f_str = "".join(it.split(","))
        ff_str = f_str +"00"
        f_l.append(ff_str)

    return f_l

def remove_douhao(num):
    num1 = "".join(num.split(","))
    f_num = str(num1)
    return f_num
def remove_block(items):
    new_items = []
    for it in items:
        f = "".join(it.split())
        new_items.append(f)
    return new_items
def call_page(url):
    try:
        response = requests.get(url)
        if response.status_code == 200:
            return response.text
        return None
    except RequestException:
        return None


class JSPool_M(object):

    def __init__(self,url):
        self.url = url

    def page_request(self):
        ''' 发送请求获取数据 '''
        headers = {
            'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.139 Safari/537.36'
        }

        response = requests.get(self.url,headers=headers)
        if response.status_code == 200:
            html = response.text
            return html
        else:
            pass

    def page_parse_(self):
        '''根据页面内容使用lxml解析数据, 获取段子列表'''


        html  = self.page_request()
        element = etree.HTML(html)

        now_price = element.xpath(
            '//*[@id="layout"]/div[2]/div[3]/div[2]/div/div[1]/div/div/div[1]/div[2]/div/div[2]/div/text()')
        f_price = RemoveDot(remove_block(now_price))
        big_list.append(float(f_price[0]))
        print(f_price[0])
        return big_list



def insertDB(content):
    connection = pymysql.connect(host='127.0.0.1', port=3306, user='root', password='123456', db='JS',
                                 charset='utf8mb4', cursorclass=pymysql.cursors.DictCursor)

    cursor = connection.cursor()

    try:
        # 用一个列表解析
        f_jsp = ["J" + cod for cod in into_db]
        sp_func = lambda x: ",".join(x)
        f_lcode = sp_func(f_jsp)

        f_ls = "%s," * len(into_db)
        fc = f_lcode
        print(len(fc.split(",")))
        print(len(f_ls[:-1].split(",")))
        cursor.executemany('insert into js225_400_leverage_2022_0122 ({0}) values ({1})'.format(fc,f_ls[:-1]), content)
        connection.commit()
        connection.commit()
        connection.close()
        print('向MySQL中添加数据成功！')
    except TypeError:
        pass




def get_index():
    index_code = ["0000", "0040"]
    for i_code in index_code:
        url ='https://kabutan.jp/stock/?code={0}'.format(i_code)
        html =call_page(url)
        element = etree.HTML(html)

        now_price = element.xpath('//*[@id="stockinfo_i1"]/div[2]/span[2]/text()')
        f_price = RemoveDot(remove_block(now_price))
        big_list.append(float(f_price[0]))




if __name__ == "__main__":
    s = datetime.datetime.now()
    into_db =  ["225","400",'1332','1333', '1417', '1605', '1719', '1720', '1721', '1766', '1801', '1802', '1803', '1808',
                       '1812', '1820', '1821', '1824', '1860', '1861', '1878', '1881', '1893', '1911', '1925', '1928',
                       '1942', '1951', '1959', '1963', '1973', '2002', '2121', '2127', '2146', '2175', '2181', '2201',
                       '2229', '2264', '2267', '2269', '2281', '2282', '2317', '2327', '2331', '2337', '2371', '2379',
                       '2412', '2413', '2427', '2432', '2433', '2501', '2502', '2503', '2531', '2587', '2593', '2651',
                       '2670', '2702', '2768', '2782', '2784', '2801', '2802', '2809', '2811', '2815', '2871', '2875',
                       '2897', '2914', '3003', '3038', '3048', '3064', '3086', '3088', '3092', '3099', '3101', '3103',
                       '3107', '3116', '3141', '3148', '3167', '3231', '3244', '3254', '3288', '3289', '3291', '3349',
                       '3360', '3382', '3391', '3401', '3402', '3405', '3407', '3436', '3543', '3549', '3563', '3626',
                       '3635', '3659', '3738', '3765', '3769', '3861', '3863', '3880', '3923', '3932', '3941', '4004',
                       '4005', '4021', '4042', '4043', '4061', '4063', '4088', '4091', '4151', '4182', '4183', '4188',
                       '4202', '4204', '4205', '4206', '4208', '4307', '4324', '4348', '4403', '4452', '4502', '4503',
                       '4506', '4507', '4516', '4519', '4521', '4523', '4527', '4528', '4536', '4543', '4552', '4553',
                       '4568', '4578', '4587', '4612', '4613', '4631', '4661', '4684', '4686', '4689', '4704', '4716',
                       '4732', '4739', '4751', '4755', '4768', '4812', '4816', '4819', '4848', '4849', '4887', '4901',
                       '4902', '4911', '4912', '4921', '4922', '4927', '4967', '5019', '5020', '5021', '5101', '5105',
                       '5108', '5110', '5201', '5202', '5214', '5232', '5233', '5301', '5332', '5333', '5334', '5393',
                       '5401', '5406', '5411', '5541', '5631', '5703', '5706', '5707', '5711', '5713', '5714', '5801',
                       '5802', '5803', '5857', '5929', '5947', '6005', '6028', '6035', '6055', '6098', '6103', '6113',
                       '6134', '6136', '6141', '6146', '6178', '6183', '6201', '6235', '6268', '6273', '6301', '6302',
                       '6305', '6326', '6361', '6367', '6383', '6432', '6448', '6465', '6471', '6472', '6473', '6479',
                       '6501', '6503', '6504', '6506', '6532', '6544', '6586', '6594', '6645', '6670', '6674', '6701',
                       '6702', '6703', '6723', '6724', '6727', '6728', '6750', '6752', '6753', '6754', '6758', '6762',
                       '6770', '6841', '6845', '6849', '6856', '6857', '6861', '6869', '6902', '6920', '6923', '6952',
                       '6954', '6965', '6971', '6976', '6981', '6988', '7003', '7004', '7011', '7012', '7013', '7148',
                       '7164', '7167', '7177', '7186', '7201', '7202', '7203', '7205', '7211', '7259', '7261', '7267',
                       '7269', '7270', '7272', '7276', '7282', '7309', '7313', '7419', '7453', '7459', '7516', '7532',
                       '7550', '7564', '7575', '7649', '7701', '7717', '7729', '7731', '7733', '7735', '7741', '7747',
                       '7751', '7752', '7762', '7832', '7846', '7911', '7912', '7947', '7951', '7956', '7974', '7988',
                       '8001', '8002', '8015', '8020', '8031', '8035', '8053', '8056', '8058', '8088', '8111', '8113',
                       '8194', '8233', '8252', '8253', '8267', '8273', '8279', '8282', '8283', '8303', '8304', '8306',
                       '8308', '8309', '8316', '8331', '8354', '8355', '8410', '8411', '8424', '8425', '8439', '8473',
                       '8570', '8572', '8585', '8591', '8593', '8595', '8601', '8604', '8628', '8630', '8697', '8725',
                       '8750', '8766', '8795', '8801', '8802', '8804', '8830', '8850', '8876', '8892', '8905', '8919',
                       '9001', '9005', '9007', '9008', '9009', '9020', '9021', '9022', '9042', '9062', '9064', '9065',
                       '9069', '9086', '9090', '9101', '9104', '9107', '9142', '9143', '9202', '9301', '9375', '9418',
                       '9432', '9433', '9434', '9435', '9501', '9502', '9503', '9504', '9506', '9508', '9509', '9513',
                       '9517', '9519', '9531', '9532', '9602', '9613', '9627', '9678', '9684', '9697', '9719', '9735',
                       '9744', '9766', '9787', '9810', '9843', '9962', '9983', '9984', '9989']
    big_list = []
    f_compare_content = []
    get_index()
    _2022_1_22= [27522.26, 17377.93, 533.0, 2383.0, 1822.0, 1051.0, 878.0, 698.0, 2710.0, 9230.0, 3750.0, 928.0, 774.0, 1419.0, 1366.0, 3840.0, 433.0, 899.0, 734.0, 2972.0, 13360.0, 4000.0, 641.0, 2023.0, 3321.0, 2320.0, 862.0, 2378.0, 3395.0, 1106.0, 1800.0, 1579.0, 2203.0, 2172.0, 3465.0, 3435.0, 3020.0, 3620.0, 2679.0, 5410.0, 5920.0, 7030.0, 2516.0, 4360.0, 375.0, 3410.0, 4255.0, 296.0, 2519.0, 3560.0, 3775.0, 4497.0, 1376.0, 1797.0, 1905.0, 2236.0, 4851.0, 1880.0, 1138.0, 4390.0, 6330.0, 4900.0, 5360.0, 5030.0, 1774.0, 2894.0, 1595.0, 8640.0, 3248.0, 2330.0, 3000.0, 6130.0, 2549.0, 4730.0, 7940.0, 2335.0, 1056.0, 3625.0, 1003.0, 2024.0, 1020.0, 3850.0, 2856.0, 904.0, 1271.0, 307.0, 1675.0, 2105.0, 3145.0, 3075.0, 862.0, 2614.0, 2105.0, 2063.0, 5790.0, 648.0, 2524.0, 14920.0, 2566.0, 5240.0, 9630.0, 1458.0, 732.0, 1024.0, 1141.0, 2214.0, 2025.0, 6690.0, 3440.0, 3060.0, 4070.0, 2070.0, 1655.0, 2495.0, 10580.0, 592.0, 1146.0, 1905.0, 2559.0, 2726.0, 865.0, 2366.0, 580.0, 6130.0, 1759.0, 1826.0, 3920.0, 18705.0, 1772.0, 2377.0, 2916.0, 2116.0, 3160.0, 888.0, 850.0, 1901.0, 1324.0, 3195.0, 2059.0, 4375.0, 4215.0, 1972.0, 5270.0, 5853.0, 3323.0, 1933.0, 1324.0, 6941.0, 7350.0, 3680.0, 4235.0, 5934.0, 3165.0, 2700.0, 1289.0, 4274.0, 1993.0, 2722.0, 2609.0, 4153.0, 2228.0, 929.0, 2450.0, 2940.0, 18975.0, 18480.0, 5020.0, 569.0, 5920.0, 8710.0, 1866.0, 3395.0, 1774.0, 1084.0, 4845.0, 3485.0, 8450.0, 4440.0, 2087.0, 2901.0, 4365.0, 7800.0, 518.0, 5936.0, 1531.0, 2939.0, 10790.0, 1741.0, 8690.0, 3140.0, 449.0, 2292.0, 1721.0, 1671.0, 5112.0, 1182.0, 5050.0, 516.0, 2800.0, 3565.0, 2294.0, 1201.0, 4940.0, 1919.0, 1983.0, 2610.0, 1904.0, 561.0, 1496.0, 2316.0, 4015.0, 1793.0, 3195.0, 2481.0, 2036.0, 5214.0, 4945.0, 2330.0, 1560.0, 580.0, 2071.0, 1232.0, 10540.0, 3505.0, 3095.0, 5430.0, 1684.0, 6019.0, 5000.0, 1128.0, 2448.0, 2032.0, 1831.0, 32000.0, 960.0, 1411.0, 8990.0, 2294.0, 3605.0, 65610.0, 2889.0, 2972.0, 2951.0, 2540.0, 5750.0, 24765.0, 8250.0, 2850.0, 2189.0, 8460.0, 779.0, 235.0, 961.0, 2791.0, 6298.0, 1477.0, 5680.0, 4975.0, 44700.0, 1702.0, 4642.0, 11515.0, 9597.0, 1008.0, 2526.0, 5200.0, 18700.0, 897.0, 1313.0, 1986.0, 876.0, 5990.0, 1410.0, 1302.0, 1294.0, 1666.0, 12955.0, 4150.0, 1095.0, 1984.0, 4750.0, 3095.0, 6090.0, 9650.0, 60700.0, 11230.0, 8822.0, 26770.0, 2797.0, 1478.0, 23105.0, 5920.0, 6780.0, 5650.0, 8646.0, 8910.0, 393.0, 778.0, 3051.0, 2267.0, 2312.0, 686.0, 5240.0, 251.0, 854.0, 454.0, 612.0, 1391.0, 2284.0, 944.0, 310.0, 4310.0, 911.0, 3437.0, 4668.0, 2103.0, 2763.0, 6080.0, 2413.0, 26205.0, 1449.0, 2300.0, 1499.0, 2045.0, 3375.0, 1519.0, 2727.0, 5140.0, 1072.0, 6900.0, 4085.0, 3490.0, 4820.0, 1213.0, 2455.0, 11330.0, 15170.0, 2089.0, 2748.0, 1064.0, 484.0, 8203.0, 4045.0, 2172.0, 2797.0, 3735.0, 5240.0, 2352.0, 54710.0, 3665.0, 3675.0, 1146.0, 4825.0, 1261.0, 2853.0, 57510.0, 1748.0, 3105.0, 3823.0, 5720.0, 5950.0, 4781.0, 3055.0, 1085.0, 2195.0, 1260.0, 2501.0, 3115.0, 6580.0, 1098.0, 4100.0, 2059.0, 2547.0, 674.0, 482.0, 4002.0, 4116.0, 705.0, 2135.0, 875.0, 241.0, 1552.0, 7530.0, 3155.0, 5580.0, 3105.0, 1187.0, 319.0, 125.0, 2481.0, 597.0, 5960.0, 721.0, 517.0, 803.0, 5226.0, 2386.0, 3933.0, 2553.0, 6730.0, 1660.0, 2335.0, 1641.0, 1665.0, 3443.0, 2466.0, 2035.0, 758.0, 1632.0, 3635.0, 2717.0, 1525.0, 2095.0, 5280.0, 3125.0, 6762.0, 4930.0, 15060.0, 3310.0, 6910.0, 2368.0, 4655.0, 927.0, 5330.0, 1420.0, 8370.0, 8240.0, 6570.0, 2414.0, 2456.0, 2448.0, 2719.0, 2837.0, 2597.0, 3262.0, 3562.0, 1440.0, 15090.0, 297.0, 1241.0, 1104.0, 963.0, 823.0, 859.0, 508.0, 1501.0, 1606.0, 1673.0, 2219.0, 1943.0, 4610.0, 2272.0, 5770.0, 2302.0, 5710.0, 2605.0, 2028.0, 7846.0, 6580.0, 5970.0, 3065.0, 5080.0, 16500.0, 3865.0, 67390.0, 5487.0, 2919.0]


    js225_400_codes = ['1332', '1333', '1417', '1605', '1719', '1720', '1721', '1766', '1801', '1802', '1803', '1808',
                       '1812', '1820', '1821', '1824', '1860', '1861', '1878', '1881', '1893', '1911', '1925', '1928',
                       '1942', '1951', '1959', '1963', '1973', '2002', '2121', '2127', '2146', '2175', '2181', '2201',
                       '2229', '2264', '2267', '2269', '2281', '2282', '2317', '2327', '2331', '2337', '2371', '2379',
                       '2412', '2413', '2427', '2432', '2433', '2501', '2502', '2503', '2531', '2587', '2593', '2651',
                       '2670', '2702', '2768', '2782', '2784', '2801', '2802', '2809', '2811', '2815', '2871', '2875',
                       '2897', '2914', '3003', '3038', '3048', '3064', '3086', '3088', '3092', '3099', '3101', '3103',
                       '3107', '3116', '3141', '3148', '3167', '3231', '3244', '3254', '3288', '3289', '3291', '3349',
                       '3360', '3382', '3391', '3401', '3402', '3405', '3407', '3436', '3543', '3549', '3563', '3626',
                       '3635', '3659', '3738', '3765', '3769', '3861', '3863', '3880', '3923', '3932', '3941', '4004',
                       '4005', '4021', '4042', '4043', '4061', '4063', '4088', '4091', '4151', '4182', '4183', '4188',
                       '4202', '4204', '4205', '4206', '4208', '4307', '4324', '4348', '4403', '4452', '4502', '4503',
                       '4506', '4507', '4516', '4519', '4521', '4523', '4527', '4528', '4536', '4543', '4552', '4553',
                       '4568', '4578', '4587', '4612', '4613', '4631', '4661', '4684', '4686', '4689', '4704', '4716',
                       '4732', '4739', '4751', '4755', '4768', '4812', '4816', '4819', '4848', '4849', '4887', '4901',
                       '4902', '4911', '4912', '4921', '4922', '4927', '4967', '5019', '5020', '5021', '5101', '5105',
                       '5108', '5110', '5201', '5202', '5214', '5232', '5233', '5301', '5332', '5333', '5334', '5393',
                       '5401', '5406', '5411', '5541', '5631', '5703', '5706', '5707', '5711', '5713', '5714', '5801',
                       '5802', '5803', '5857', '5929', '5947', '6005', '6028', '6035', '6055', '6098', '6103', '6113',
                       '6134', '6136', '6141', '6146', '6178', '6183', '6201', '6235', '6268', '6273', '6301', '6302',
                       '6305', '6326', '6361', '6367', '6383', '6432', '6448', '6465', '6471', '6472', '6473', '6479',
                       '6501', '6503', '6504', '6506', '6532', '6544', '6586', '6594', '6645', '6670', '6674', '6701',
                       '6702', '6703', '6723', '6724', '6727', '6728', '6750', '6752', '6753', '6754', '6758', '6762',
                       '6770', '6841', '6845', '6849', '6856', '6857', '6861', '6869', '6902', '6920', '6923', '6952',
                       '6954', '6965', '6971', '6976', '6981', '6988', '7003', '7004', '7011', '7012', '7013', '7148',
                       '7164', '7167', '7177', '7186', '7201', '7202', '7203', '7205', '7211', '7259', '7261', '7267',
                       '7269', '7270', '7272', '7276', '7282', '7309', '7313', '7419', '7453', '7459', '7516', '7532',
                       '7550', '7564', '7575', '7649', '7701', '7717', '7729', '7731', '7733', '7735', '7741', '7747',
                       '7751', '7752', '7762', '7832', '7846', '7911', '7912', '7947', '7951', '7956', '7974', '7988',
                       '8001', '8002', '8015', '8020', '8031', '8035', '8053', '8056', '8058', '8088', '8111', '8113',
                       '8194', '8233', '8252', '8253', '8267', '8273', '8279', '8282', '8283', '8303', '8304', '8306',
                       '8308', '8309', '8316', '8331', '8354', '8355', '8410', '8411', '8424', '8425', '8439', '8473',
                       '8570', '8572', '8585', '8591', '8593', '8595', '8601', '8604', '8628', '8630', '8697', '8725',
                       '8750', '8766', '8795', '8801', '8802', '8804', '8830', '8850', '8876', '8892', '8905', '8919',
                       '9001', '9005', '9007', '9008', '9009', '9020', '9021', '9022', '9042', '9062', '9064', '9065',
                       '9069', '9086', '9090', '9101', '9104', '9107', '9142', '9143', '9202', '9301', '9375', '9418',
                       '9432', '9433', '9434', '9435', '9501', '9502', '9503', '9504', '9506', '9508', '9509', '9513',
                       '9517', '9519', '9531', '9532', '9602', '9613', '9627', '9678', '9684', '9697', '9719', '9735',
                       '9744', '9766', '9787', '9810', '9843', '9962', '9983', '9984', '9989']



    for it in js225_400_codes:

        url = "https://minkabu.jp/stock/{0}".format(it)
        print(url)
        jsp = JSPool_M(url)# 这里把请求和解析都进行了处理
        jsp.page_parse_()
    ff_l = []
    print(len(_2022_1_22[2:]))
    print(len(big_list[2:]))
    index225_ = (big_list[0] - _2022_1_22[0]) / _2022_1_22[0]
    index400_ = (big_list[1] - _2022_1_22[1]) / _2022_1_22[1]

    f_compare_content.append(str(round(index225_,5)))
    f_compare_content.append(str(round(index400_,5)))

    for i1,i2 in zip(big_list[2:],_2022_1_22[2:]):
        if (((i1-i2)/i2)-0.03) > max(float(f_compare_content[0]),float(f_compare_content[1])):
            print((i1-float(i2))/float(i2)-0.05)
            print(max(index225_,index400_))

            f_compare_content.append(round(((i1-i2)/i2),5))
        else:
            print(round(((i1-float(i2))/float(i2))))
            f_compare_content.append("")


    f_tup = tuple(f_compare_content)
    print(f_tup)
    ff_l.append((f_tup))
    print(ff_l)
    print(big_list)
    print(f_compare_content)
    insertDB(ff_l)
    e = datetime.datetime.now()
    print(e-s)





















 #   create table js225_400_leverage_2022_0122(id int not null primary key auto_increment,J225 text,J400 text,J1332 text, J1333 text, J1417 text, J1605 text, J1719 text, J1720 text, J1721 text, J1766 text, J1801 text, J1802 text, J1803 text, J1808 text, J1812 text, J1820 text, J1821 text, J1824 text, J1860 text, J1861 text, J1878 text, J1881 text, J1893 text, J1911 text, J1925 text, J1928 text, J1942 text, J1951 text, J1959 text, J1963 text, J1973 text, J2002 text, J2121 text, J2127 text, J2146 text, J2175 text, J2181 text, J2201 text, J2229 text, J2264 text, J2267 text, J2269 text, J2281 text, J2282 text, J2317 text, J2327 text, J2331 text, J2337 text, J2371 text, J2379 text, J2412 text, J2413 text, J2427 text, J2432 text, J2433 text, J2501 text, J2502 text, J2503 text, J2531 text, J2587 text, J2593 text, J2651 text, J2670 text, J2702 text, J2768 text, J2782 text, J2784 text, J2801 text, J2802 text, J2809 text, J2811 text, J2815 text, J2871 text, J2875 text, J2897 text, J2914 text, J3003 text, J3038 text, J3048 text, J3064 text, J3086 text, J3088 text, J3092 text, J3099 text, J3101 text, J3103 text, J3107 text, J3116 text, J3141 text, J3148 text, J3167 text, J3231 text, J3244 text, J3254 text, J3288 text, J3289 text, J3291 text, J3349 text, J3360 text, J3382 text, J3391 text, J3401 text, J3402 text, J3405 text, J3407 text, J3436 text, J3543 text, J3549 text, J3563 text, J3626 text, J3635 text, J3659 text, J3738 text, J3765 text, J3769 text, J3861 text, J3863 text, J3880 text, J3923 text, J3932 text, J3941 text, J4004 text, J4005 text, J4021 text, J4042 text, J4043 text, J4061 text, J4063 text, J4088 text, J4091 text, J4151 text, J4182 text, J4183 text, J4188 text, J4202 text, J4204 text, J4205 text, J4206 text, J4208 text, J4307 text, J4324 text, J4348 text, J4403 text, J4452 text, J4502 text, J4503 text, J4506 text, J4507 text, J4516 text, J4519 text, J4521 text, J4523 text, J4527 text, J4528 text, J4536 text, J4543 text, J4552 text, J4553 text, J4568 text, J4578 text, J4587 text, J4612 text, J4613 text, J4631 text, J4661 text, J4684 text, J4686 text, J4689 text, J4704 text, J4716 text, J4732 text, J4739 text, J4751 text, J4755 text, J4768 text, J4812 text, J4816 text, J4819 text, J4848 text, J4849 text, J4887 text, J4901 text, J4902 text, J4911 text, J4912 text, J4921 text, J4922 text, J4927 text, J4967 text, J5019 text, J5020 text, J5021 text, J5101 text, J5105 text, J5108 text, J5110 text, J5201 text, J5202 text, J5214 text, J5232 text, J5233 text, J5301 text, J5332 text, J5333 text, J5334 text, J5393 text, J5401 text, J5406 text, J5411 text, J5541 text, J5631 text, J5703 text, J5706 text, J5707 text, J5711 text, J5713 text, J5714 text, J5801 text, J5802 text, J5803 text, J5857 text, J5929 text, J5947 text, J6005 text, J6028 text, J6035 text, J6055 text, J6098 text, J6103 text, J6113 text, J6134 text, J6136 text, J6141 text, J6146 text, J6178 text, J6183 text, J6201 text, J6235 text, J6268 text, J6273 text, J6301 text, J6302 text, J6305 text, J6326 text, J6361 text, J6367 text, J6383 text, J6432 text, J6448 text, J6465 text, J6471 text, J6472 text, J6473 text, J6479 text, J6501 text, J6503 text, J6504 text, J6506 text, J6532 text, J6544 text, J6586 text, J6594 text, J6645 text, J6670 text, J6674 text, J6701 text, J6702 text, J6703 text, J6723 text, J6724 text, J6727 text, J6728 text, J6750 text, J6752 text, J6753 text, J6754 text, J6758 text, J6762 text, J6770 text, J6841 text, J6845 text, J6849 text, J6856 text, J6857 text, J6861 text, J6869 text, J6902 text, J6920 text, J6923 text, J6952 text, J6954 text, J6965 text, J6971 text, J6976 text, J6981 text, J6988 text, J7003 text, J7004 text, J7011 text, J7012 text, J7013 text, J7148 text, J7164 text, J7167 text, J7177 text, J7186 text, J7201 text, J7202 text, J7203 text, J7205 text, J7211 text, J7259 text, J7261 text, J7267 text, J7269 text, J7270 text, J7272 text, J7276 text, J7282 text, J7309 text, J7313 text, J7419 text, J7453 text, J7459 text, J7516 text, J7532 text, J7550 text, J7564 text, J7575 text, J7649 text, J7701 text, J7717 text, J7729 text, J7731 text, J7733 text, J7735 text, J7741 text, J7747 text, J7751 text, J7752 text, J7762 text, J7832 text, J7846 text, J7911 text, J7912 text, J7947 text, J7951 text, J7956 text, J7974 text, J7988 text, J8001 text, J8002 text, J8015 text, J8020 text, J8031 text, J8035 text, J8053 text, J8056 text, J8058 text, J8088 text, J8111 text, J8113 text, J8194 text, J8233 text, J8252 text, J8253 text, J8267 text, J8273 text, J8279 text, J8282 text, J8283 text, J8303 text, J8304 text, J8306 text, J8308 text, J8309 text, J8316 text, J8331 text, J8354 text, J8355 text, J8410 text, J8411 text, J8424 text, J8425 text, J8439 text, J8473 text, J8570 text, J8572 text, J8585 text, J8591 text, J8593 text, J8595 text, J8601 text, J8604 text, J8628 text, J8630 text, J8697 text, J8725 text, J8750 text, J8766 text, J8795 text, J8801 text, J8802 text, J8804 text, J8830 text, J8850 text, J8876 text, J8892 text, J8905 text, J8919 text, J9001 text, J9005 text, J9007 text, J9008 text, J9009 text, J9020 text, J9021 text, J9022 text, J9042 text, J9062 text, J9064 text, J9065 text, J9069 text, J9086 text, J9090 text, J9101 text, J9104 text, J9107 text, J9142 text, J9143 text, J9202 text, J9301 text, J9375 text, J9418 text, J9432 text, J9433 text, J9434 text, J9435 text, J9501 text, J9502 text, J9503 text, J9504 text, J9506 text, J9508 text, J9509 text, J9513 text, J9517 text, J9519 text, J9531 text, J9532 text, J9602 text, J9613 text, J9627 text, J9678 text, J9684 text, J9697 text, J9719 text, J9735 text, J9744 text, J9766 text, J9787 text, J9810 text, J9843 text, J9962 text, J9983 text, J9984 text, J9989 text,LastTime timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP ) engine=InnoDB  charset=utf8;




